{"version":3,"file":"search-DMmt71Gz.js","sources":["../../src/js/fetchMovies.js","../../src/js/pagination.js","../../src/js/search.js"],"sourcesContent":["import axios from 'axios';\n//IMPORT API KEY FROM ENV (Bunu Calistiramadim SOnra Canliya Alirken Tekrardan Bakilacak) !\n// const API_KEY = import.meta.env.VITE_APIKEY;\n// console.log('APIKEY:', API_KEY);\n\n//VARIABLES ABOUT THE API\nconst API_KEY = '016a30ce49a7789188b6fa9bad9963a6';\nconst BASE_URL = 'https://api.themoviedb.org/3'; //API ANA DIZIN\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p'; //API RESIM ANA DIZIN\nexport { BASE_URL, IMG_BASE_URL };\n\n// ENDPOINT OBJECTS\nexport const ENDPOINTS = {\n  TRENDING_WEEK: '/trending/movie/week', //API TREND FILM HAFTALIK\n  TRENDING_DAY: '/trending/movie/day', //API TREND FILM GUNLUK\n  POPULAR_MOVIES: '/movie/popular', //API TREND FILM\n  UPCOMING_MOVIES: '/movie/upcoming', //API GET UPCOMING\n  MOVIE_DETAILS: movieId => `/movie/${movieId}`,\n  MOVIE_VIDEOS: movieId => `/movie/${movieId}/videos`,\n  SEARCH_MOVIES: '/search/movie',\n  GENRE_LIST: '/genre/movie/list',\n  IMG_W500: '/w500', //(BURAYA IHTIYACA GORE DIGER EBATLAR EKLENIR)\n  IMG_W780: '/w780',\n  IMG_W1280: '/w1280',\n  IMG_ORIGINAL: '/original', // RESIM ORJINAL\n};\n\nexport async function fetchMovies(baseurl, endpoint, params = {}) {\n  try {\n    const response = await axios.get(`${baseurl}${endpoint}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        ...params,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}\n\n//FUNCTION APPLICATION EXAMPLE\n// fetchMovies(BASE_URL, ENDPOINTS.TRENDING_WEEK);\n// fetchMovies(BASE_URL, ENDPOINTS.TRENDING_DAY);\n// fetchMovies(BASE_URL, ENDPOINTS.SEARCH_MOVIES, { query: 'avengers' });\n// fetchMovies(BASE_URL, ENDPOINTS.GENRE_LIST);\n// fetchMovies(BASE_URL, ENDPOINTS.MOVIE_DETAILS, { id: 337401 });\n// fetchMovies(BASE_URL, ENDPOINTS.POPULAR_MOVIES);\n\n// fetchMovies(BASE_URL, ENDPOINTS.POPULAR_MOVIES, { page: 1 }).then(data => {\n//   console.log(data);\n//   const randomNumber = Math.floor(Math.random() * 20);\n//   console.log(randomNumber);\n//   const movie = data.results[randomNumber];\n//   const imageUrl = `${IMG_BASE_URL}${ENDPOINTS.IMG_ORIGINAL}${movie.poster_path}`; // Resim URL'sini oluşturuyoruz\n\n//   const heroItemElement = document.querySelector('#heroItem');\n//   const imgElement = document.createElement('img');\n//   imgElement.src = imageUrl;\n//   imgElement.alt = movie.title;\n//   heroItemElement.appendChild(imgElement);\n// });\n\n// API Configuration (Bu Kisim Bilgi Icindir Canlida Temizlenebilir...)\n/* \n{\n  \"images\": {\n    \"base_url\": \"http://image.tmdb.org/t/p/\",\n    \"secure_base_url\": \"https://image.tmdb.org/t/p/\",\n    \"backdrop_sizes\": [\n      \"w300\",\n      \"w780\",\n      \"w1280\",\n      \"original\"\n    ],\n    \"logo_sizes\": [\n      \"w45\",\n      \"w92\",\n      \"w154\",\n      \"w185\",\n      \"w300\",\n      \"w500\",\n      \"original\"\n    ],\n    \"poster_sizes\": [\n      \"w92\",\n      \"w154\",\n      \"w185\",\n      \"w342\",\n      \"w500\",\n      \"w780\",\n      \"original\"\n    ],\n    \"profile_sizes\": [\n      \"w45\",\n      \"w185\",\n      \"h632\",\n      \"original\"\n    ],\n    \"still_sizes\": [\n      \"w92\",\n      \"w185\",\n      \"w300\",\n      \"original\"\n    ]\n  },\n  \"change_keys\": [\n    \"adult\",\n    \"air_date\",\n    \"also_known_as\",\n    \"alternative_titles\",\n    \"biography\",\n    \"birthday\",\n    \"budget\",\n    \"cast\",\n    \"certifications\",\n    \"character_names\",\n    \"created_by\",\n    \"crew\",\n    \"deathday\",\n    \"episode\",\n    \"episode_number\",\n    \"episode_run_time\",\n    \"freebase_id\",\n    \"freebase_mid\",\n    \"general\",\n    \"genres\",\n    \"guest_stars\",\n    \"homepage\",\n    \"images\",\n    \"imdb_id\",\n    \"languages\",\n    \"name\",\n    \"network\",\n    \"origin_country\",\n    \"original_name\",\n    \"original_title\",\n    \"overview\",\n    \"parts\",\n    \"place_of_birth\",\n    \"plot_keywords\",\n    \"production_code\",\n    \"production_companies\",\n    \"production_countries\",\n    \"releases\",\n    \"revenue\",\n    \"runtime\",\n    \"season\",\n    \"season_number\",\n    \"season_regular\",\n    \"spoken_languages\",\n    \"status\",\n    \"tagline\",\n    \"title\",\n    \"translations\",\n    \"tvdb_id\",\n    \"tvrage_id\",\n    \"type\",\n    \"video\",\n    \"videos\"\n  ]\n}\n*/\n","import axios from 'axios';\n\nconst API_KEY = '016a30ce49a7789188b6fa9bad9963a6';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst paginationNumbers = document.getElementById('paginationNumbers');\nconst prevButton = document.getElementById('prevButton');\nconst nextButton = document.getElementById('nextButton');\nconst movieList = document.getElementById('movie-list');\n\nlet currentPage = 1;\nlet totalPages = 1;\n\nexport async function initPagination() {\n  await loadMovies(currentPage);\n  updatePaginationUI();\n  prevButton.addEventListener('click', () => changePage(currentPage - 1));\n  nextButton.addEventListener('click', () => changePage(currentPage + 1));\n}\n\nasync function fetchMovies(page) {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/week`, {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n}\n\nasync function loadMovies(page) {\n  try {\n    const data = await fetchMovies(page);\n    renderMovies(data.results);\n    totalPages = data.total_pages;\n    currentPage = page;\n    updatePaginationUI();\n  } catch (error) {\n    console.error('Failed to load movies:', error);\n    showErrorMessage('Failed to load movies. Please try again.');\n  }\n}\n\nfunction renderMovies(movies) {\n  movieList.innerHTML = ''; // Clear current list\n  movies.forEach(movie => {\n    const movieCard = createMovieCard(movie);\n    movieList.appendChild(movieCard);\n  });\n}\n\nfunction createMovieCard(movie) {\n  const card = document.createElement('div');\n  card.className = 'catalog-item';\n  card.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`;\n  card.innerHTML = `\n    <div class=\"catalog-card-info-container\">\n      <h3 class=\"catalog-card-title\">${movie.title}</h3>\n      <p class=\"catalog-card-description\">${movie.release_date}</p>\n      <p class=\"rating\">⭐ ${movie.vote_average.toFixed(1)}</p>\n    </div>\n  `;\n  return card;\n}\n\nfunction updatePaginationUI() {\n  paginationNumbers.innerHTML = '';\n  const startPage = Math.max(1, currentPage - 2);\n  const endPage = Math.min(totalPages, startPage + 4);\n\n  for (let i = startPage; i <= endPage; i++) {\n    const pageButton = document.createElement('button');\n    pageButton.textContent = i;\n    pageButton.classList.add('pagination-button');\n    if (i === currentPage) {\n      pageButton.classList.add('active');\n    }\n    pageButton.addEventListener('click', () => changePage(i));\n    paginationNumbers.appendChild(pageButton);\n  }\n\n  prevButton.disabled = currentPage === 1;\n  nextButton.disabled = currentPage === totalPages;\n}\n\nasync function changePage(newPage) {\n  if (newPage >= 1 && newPage <= totalPages) {\n    await loadMovies(newPage);\n  }\n}\n\nfunction showErrorMessage(message) {\n  const errorElement = document.createElement('p');\n  errorElement.className = 'error-message';\n  errorElement.textContent = message;\n  movieList.appendChild(errorElement);\n}\n\ninitPagination();\n","import { fetchMovies, BASE_URL, ENDPOINTS } from './fetchMovies.js';\n\nconst searchInput = document.getElementById('search-input');\nconst searchButton = document.getElementById('search-button');\nconst movieList = document.getElementById('movie-list');\nconst errorMessage = document.querySelector('.error-message');\n\nsearchButton.addEventListener('click', () => {\n  const query = searchInput.value.trim();\n  if (query) {\n    searchMovies(query);\n  }\n});\n\nasync function searchMovies(query) {\n  try {\n    const data = await fetchMovies(BASE_URL, ENDPOINTS.SEARCH_MOVIES, {\n      query,\n    });\n    if (data.results.length) {\n      renderMovies(data.results);\n    } else {\n      showError('No movies found.');\n    }\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    showError('Something went wrong. Please try again later.');\n  }\n}\n\nfunction renderMovies(movies) {\n  movieList.innerHTML = '';\n  errorMessage.style.display = 'none';\n  movies.forEach(movie => {\n    const movieCard = document.createElement('div');\n    movieCard.className = 'catalog-item';\n    movieCard.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`;\n    movieCard.innerHTML = `\n      <div class=\"catalog-card-info-container\">\n        <h3 class=\"catalog-card-title\">${movie.title}</h3>\n        <p class=\"catalog-card-description\">${getGenres(movie.genre_ids)}</p>\n        <p class=\"rating\">⭐ ${movie.vote_average.toFixed(1)}</p>\n      </div>\n    `;\n    movieList.appendChild(movieCard);\n  });\n}\n\nfunction showError(message) {\n  errorMessage.textContent = message;\n  errorMessage.style.display = 'block';\n}\n\nfunction getGenres(genreIds) {\n  const genres = {\n    28: 'Action',\n    12: 'Adventure',\n    16: 'Animation',\n    35: 'Comedy',\n    80: 'Crime',\n    99: 'Documentary',\n    18: 'Drama',\n    10751: 'Family',\n    14: 'Fantasy',\n    36: 'History',\n    27: 'Horror',\n    10402: 'Music',\n    9648: 'Mystery',\n    10749: 'Romance',\n    878: 'Science Fiction',\n    10770: 'TV Movie',\n    53: 'Thriller',\n    10752: 'War',\n    37: 'Western',\n  };\n  return genreIds.map(id => genres[id] || 'Unknown').join(', ');\n}\n"],"names":["API_KEY","BASE_URL","IMG_BASE_URL","ENDPOINTS","movieId","fetchMovies","baseurl","endpoint","params","axios","error","paginationNumbers","prevButton","nextButton","movieList","currentPage","totalPages","initPagination","loadMovies","updatePaginationUI","changePage","page","data","renderMovies","showErrorMessage","movies","movie","movieCard","createMovieCard","card","startPage","endPage","i","pageButton","newPage","message","errorElement","searchInput","searchButton","errorMessage","query","searchMovies","showError","getGenres","genreIds","genres","id"],"mappings":"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"}